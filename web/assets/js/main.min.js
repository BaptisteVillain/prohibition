"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}console.log("mdr");var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),Framework=function(){function e(t,r){var n=this;_classCallCheck(this,e),this.container=t,this.fixed=r,this.container_story=t.querySelector(".container--story"),this.timeline=document.querySelector(".timeline"),this.buttons_next=document.querySelectorAll(".next"),this.buttons_prev=document.querySelectorAll(".prev"),this.sections=t.querySelectorAll(".container--section, .container--story--row-civil .container--story--section"),this.button_scroll=document.querySelector(".fixed-vertical-control"),this.current_index=0,this.current_chapter=0,this.previous_index=void 0,this.chapters=document.querySelectorAll(".timeline--part"),this.chapter_prev=document.querySelectorAll(".chapter-prev"),this.chapter_next=document.querySelectorAll(".chapter-next"),this.buttons_prev.forEach(function(e){var t=this;e.addEventListener("click",function(e){e.preventDefault(),t.current_index>0&&(t.previous_index=t.current_index,t.current_index-=1,t.select())})},this),this.buttons_next.forEach(function(e){var t=this;e.addEventListener("click",function(e){e.preventDefault(),t.current_index<t.sections.length-1&&(t.previous_index=t.current_index,t.current_index+=1,t.select())})},this),this.button_scroll.addEventListener("click",function(e){e.preventDefault(),n.container_story.classList.toggle("scrolled"),console.log("scroll")}),this.chapter_prev.forEach(function(e){var t=this;e.addEventListener("click",function(e){e.preventDefault(),t.current_chapter>0&&(t.previous_chapter=t.current_chapter,t.current_chapter-=1,t.current_index=4*t.current_chapter+3,t.selectChapter())})},this),this.chapter_next.forEach(function(e){var t=this;e.addEventListener("click",function(e){e.preventDefault(),t.current_chapter<t.chapters.length-1&&(t.previous_chapter=t.current_chapter,t.current_chapter+=1,t.current_index=4*t.current_chapter+3,t.selectChapter())})},this)}return _createClass(e,[{key:"selectChapter",value:function(){this.container.style.transform="translateX(-"+100*this.current_chapter+"vw)",this.container.classList.add("hide"),framework.container.style.transform="translateX(-"+100*(4*this.current_chapter+3)+"vw)"}},{key:"select",value:function(){this.container.style.transform="translateX(-"+100*this.current_index+"vw)",this.sections[this.current_index].classList.contains("container--story--section")?this.fixed.classList.remove("hide"):this.fixed.classList.add("hide")}}]),e}(),framework=new Framework(document.querySelector(".container"),document.querySelector(".fixed"));console.log(framework);var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),Timeline=function(){function e(t){_classCallCheck(this,e),this.container=t,this.chapters=t.querySelectorAll(".timeline--part"),this.current_chapter=0,this.previous_chapter=0,this.current_section=0,this.chapter_prev=document.querySelectorAll(".chapter-prev"),this.chapter_next=document.querySelectorAll(".chapter-next"),this.section_next=document.querySelectorAll(".section-next"),this.chapter_prev.forEach(function(e){var t=this;e.addEventListener("click",function(e){e.preventDefault(),t.current_chapter>0&&(t.previous_chapter=t.current_chapter,t.current_chapter-=1,t.selectChapter())})},this),this.chapter_next.forEach(function(e){var t=this;e.addEventListener("click",function(e){e.preventDefault(),t.current_chapter<t.chapters.length-1&&(t.previous_chapter=t.current_chapter,t.current_chapter+=1,t.selectChapter())})},this)}return _createClass(e,[{key:"selectChapter",value:function(){this.container.style.transform="translateX(-"+100*this.current_chapter+"vw)",this.container.classList.add("hide"),framework.container.style.transform="translateX(-"+100*(4*this.current_chapter+3)+"vw)"}}]),e}(),timeline=new Timeline(document.querySelector(".timeline"));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
